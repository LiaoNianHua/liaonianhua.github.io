## 作用域指的是您有权访问的变量集合


```
1. 在 JavaScript 中有两种作用域类型：全局作用域和局部作用域,  
2. JavaScript 拥有函数作用域：每个函数创建一个新的作用域
3. 作用域决定了这些变量的可访问性(可见性)
4. 函数内部定义的变量从函数外部是不可访问的（不可见的）
5. 作用域决定了从代码不同部分对变量、对象和函数的可访问性
```

#### 1. 局部 JavaScript 变量

```
在 JavaScript 函数中声明的变量，会成为函数的局部变量,  
局部变量的作用域是局部的：只能在函数内部访问它们

// 此处的代码不能使用 carName 变量
function fn () {
  var carName = 'porsche'
  // 此处的代码能使用 carName 变量
}

局部变量在函数开始时会创建局部变量，在函数完成时会删除它们
```

#### 2. 全局 JavaScript 变量

```
函数之外声明的变量，会成为全局变量, 全局变量的作用域是全局的：网页的所有脚本和函数都能够访问它

var carName = 'porsche'
// 此处的代码能够使用 carName 变量
function fn () {
  // 此处的代码能够使用 carName 变量
}

全局变量会在您关闭页面是被删除
```

#### 3. 自动全局

```
如果您为尚未声明的变量赋值，此变量会自动成为全局变量,  
这段代码将声明一个全局变量 carName，即使在函数内进行了赋值

fn()
// 此处的代码能够使用 carName 变量
function fn () {
  carName = 'porsche'
}
```


